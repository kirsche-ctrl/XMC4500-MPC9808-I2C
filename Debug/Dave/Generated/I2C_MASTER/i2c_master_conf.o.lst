   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "i2c_master_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.__NVIC_GetPriorityGrouping,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	__NVIC_GetPriorityGrouping:
  25              	.LFB105:
  26              	 .file 1 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.1.0
   5:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * @date     13. March 2019
   6:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  25:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  31:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  36:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  40:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  47:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  71:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
  76:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
  88:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 164:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 165:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
 167:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 169:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 171:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 173:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 176:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 180:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 197:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 202:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 208:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 210:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 212:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
 216:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #else
 219:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
 221:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 224:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 231:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 232:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 233:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 237:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 245:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
 248:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 249:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 254:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 255:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 256:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 259:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 260:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 261:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   struct
 262:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
 263:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 275:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 279:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 282:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 285:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 288:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 291:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 294:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 295:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 296:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 298:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 299:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 300:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   struct
 301:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
 302:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 308:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 312:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 313:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 314:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 316:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 317:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 318:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   struct
 319:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
 320:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 336:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 340:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 343:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 346:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 349:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 352:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 355:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 358:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 364:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 367:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 368:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 369:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 371:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 372:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 373:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   struct
 374:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
 375:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 383:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 387:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 390:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 393:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 395:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 396:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 397:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 401:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 402:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 403:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 404:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 406:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 407:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 408:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 412:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 423:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 427:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 429:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 430:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 431:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 435:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 436:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 437:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 438:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 440:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 441:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 442:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 465:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 469:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 472:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 478:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 481:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 485:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 488:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 491:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 494:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 497:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 500:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 503:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 506:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 509:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 512:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 516:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 520:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 523:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 529:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 532:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 535:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 538:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 542:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 545:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 548:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 552:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 555:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 558:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 561:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 564:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 567:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 571:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 574:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 577:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 580:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 583:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 586:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 589:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 592:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 595:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 598:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 601:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 604:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 607:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 610:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 614:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 617:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 620:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 624:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 627:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 630:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 633:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 636:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 639:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 643:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 646:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 649:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 652:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 655:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 658:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 661:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 668:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 671:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 674:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 677:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 680:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 684:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 687:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 690:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 694:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 697:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 700:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 703:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 706:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 708:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 709:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 710:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 714:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 715:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 716:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 717:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 719:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 720:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 721:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 726:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 730:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 734:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 737:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 740:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 743:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 746:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 748:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 749:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 750:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 754:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 755:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 757:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 759:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 760:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 761:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 767:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 771:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 774:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 777:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 784:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 788:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 792:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 795:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 798:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 800:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 801:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 802:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 806:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 807:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 808:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 809:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 811:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 812:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 813:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 814:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
 815:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 826:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 827:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 830:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 843:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 844:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 848:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 852:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 855:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 858:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 861:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 864:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 867:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 870:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 873:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 876:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 880:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 886:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 889:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 896:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 901:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 926:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 930:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 933:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 936:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 939:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 942:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 945:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 948:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 951:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 954:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 957:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 960:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 963:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 966:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 969:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 972:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 975:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 981:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 985:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 989:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 993:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
 997:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1001:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1005:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1009:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1012:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1015:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1018:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1021:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1024:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1027:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1030:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1033:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1043:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1048:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1074:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1078:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1082:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1086:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1089:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1092:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1095:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1099:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1157:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1161:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1164:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1168:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1169:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1172:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1175:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1178:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1181:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1184:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1187:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1191:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1194:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1196:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1197:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1199:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1200:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1203:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1204:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1205:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1206:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1208:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1209:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1210:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1222:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1223:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1225:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1226:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1229:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1232:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1235:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1236:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1239:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1242:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1245:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1246:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1249:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1253:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1256:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1259:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1263:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1266:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1269:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1272:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1275:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1278:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1281:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1284:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1287:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1290:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1293:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1294:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1296:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1299:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1300:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1301:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1302:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1304:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1305:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1306:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1307:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1314:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1315:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1319:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1322:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1325:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1328:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1331:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1334:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1337:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1340:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1343:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1347:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1351:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1354:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1357:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1360:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1364:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1367:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1370:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1373:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1376:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1379:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1382:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1385:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1389:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1392:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1395:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1398:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1400:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1403:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1405:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1406:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1407:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1408:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1411:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1412:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1413:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1414:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1416:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1417:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1418:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1423:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1424:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1428:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1431:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1434:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1437:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1440:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1446:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1449:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1452:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1455:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1458:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1461:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1465:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1468:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1472:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1475:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1478:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1481:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1484:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1493:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1496:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1499:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1502:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1505:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1508:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1510:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1511:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1512:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1513:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1516:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1517:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1518:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1519:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1523:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
1524:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1526:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1527:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1531:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
1532:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1534:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1536:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1537:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1538:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1539:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1542:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1543:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1544:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1545:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1554:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1563:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif
1567:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1568:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1571:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1572:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1573:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1574:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1575:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1576:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1577:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1578:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1579:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1580:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1581:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1582:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1583:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1584:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** */
1586:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1587:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1588:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1589:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1591:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   @{
1595:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1597:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1601:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #else
1603:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1617:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1621:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #else
1623:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1627:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1629:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1630:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1638:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1639:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1640:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1641:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1644:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1645:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1648:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1650:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1651:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1653:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1660:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1661:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1662:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1663:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1664:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1667:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1668 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1669:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  39              	 .loc 1 1669 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 DB68     	 ldr r3,[r3,#12]
  42 0008 03F4E063 	 and r3,r3,#1792
  43 000c 1B0A     	 lsrs r3,r3,#8
1670:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
  44              	 .loc 1 1670 0
  45 000e 1846     	 mov r0,r3
  46 0010 BD46     	 mov sp,r7
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0012 5DF8047B 	 ldr r7,[sp],#4
  51              	.LCFI3:
  52              	 .cfi_restore 7
  53              	 .cfi_def_cfa_offset 0
  54 0016 7047     	 bx lr
  55              	.L4:
  56              	 .align 2
  57              	.L3:
  58 0018 00ED00E0 	 .word -536810240
  59              	 .cfi_endproc
  60              	.LFE105:
  62              	 .section .text.__NVIC_EnableIRQ,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	__NVIC_EnableIRQ:
  68              	.LFB106:
1671:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1672:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1673:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1674:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1675:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1678:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1679:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
  69              	 .loc 1 1680 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI4:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 FB71     	 strb r3,[r7,#7]
1681:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  86              	 .loc 1 1681 0
  87 000a 97F90730 	 ldrsb r3,[r7,#7]
  88 000e 002B     	 cmp r3,#0
  89 0010 0BDB     	 blt .L5
1682:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1683:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
  90              	 .loc 1 1683 0
1684:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  91              	 .loc 1 1684 0
  92 0012 0849     	 ldr r1,.L7
  93 0014 97F90730 	 ldrsb r3,[r7,#7]
  94 0018 5B09     	 lsrs r3,r3,#5
  95 001a FA79     	 ldrb r2,[r7,#7]
  96 001c 02F01F02 	 and r2,r2,#31
  97 0020 0120     	 movs r0,#1
  98 0022 00FA02F2 	 lsl r2,r0,r2
  99 0026 41F82320 	 str r2,[r1,r3,lsl#2]
1685:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 100              	 .loc 1 1685 0
 101              	.L5:
1686:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1687:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
 102              	 .loc 1 1687 0
 103 002a 0C37     	 adds r7,r7,#12
 104              	.LCFI7:
 105              	 .cfi_def_cfa_offset 4
 106 002c BD46     	 mov sp,r7
 107              	.LCFI8:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 002e 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI9:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0032 7047     	 bx lr
 115              	.L8:
 116              	 .align 2
 117              	.L7:
 118 0034 00E100E0 	 .word -536813312
 119              	 .cfi_endproc
 120              	.LFE106:
 122              	 .section .text.__NVIC_SetPriority,"ax",%progbits
 123              	 .align 2
 124              	 .thumb
 125              	 .thumb_func
 127              	__NVIC_SetPriority:
 128              	.LFB113:
1688:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1689:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1690:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1691:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1692:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1696:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1697:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1698:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1700:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1702:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1704:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   else
1705:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1706:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1707:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1708:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1709:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1710:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1711:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1712:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1713:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1716:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1717:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1719:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1721:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1723:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1724:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1725:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1726:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1727:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1728:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1729:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1730:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1734:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1735:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1736:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1738:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1740:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1742:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   else
1743:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1744:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1745:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1746:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1747:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1748:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1749:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1750:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1751:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1754:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1755:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1757:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1759:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1761:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1762:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1763:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1764:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1765:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1766:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1769:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1770:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1772:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1774:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1776:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1777:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1778:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1779:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1780:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1781:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1784:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1785:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1786:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1787:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1789:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1791:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1793:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   else
1794:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1795:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1796:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1797:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1798:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1799:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1800:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1801:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1802:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1805:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1807:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1809:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 129              	 .loc 1 1810 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI10:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI11:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI12:
 143              	 .cfi_def_cfa_register 7
 144 0006 0346     	 mov r3,r0
 145 0008 3960     	 str r1,[r7]
 146 000a FB71     	 strb r3,[r7,#7]
1811:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 147              	 .loc 1 1811 0
 148 000c 97F90730 	 ldrsb r3,[r7,#7]
 149 0010 002B     	 cmp r3,#0
 150 0012 0ADB     	 blt .L10
1812:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1813:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 151              	 .loc 1 1813 0
 152 0014 0D49     	 ldr r1,.L12
 153 0016 97F90730 	 ldrsb r3,[r7,#7]
 154 001a 3A68     	 ldr r2,[r7]
 155 001c D2B2     	 uxtb r2,r2
 156 001e 9200     	 lsls r2,r2,#2
 157 0020 D2B2     	 uxtb r2,r2
 158 0022 0B44     	 add r3,r3,r1
 159 0024 83F80023 	 strb r2,[r3,#768]
 160 0028 0AE0     	 b .L9
 161              	.L10:
1814:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1815:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   else
1816:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1817:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 162              	 .loc 1 1817 0
 163 002a 0949     	 ldr r1,.L12+4
 164 002c FB79     	 ldrb r3,[r7,#7]
 165 002e 03F00F03 	 and r3,r3,#15
 166 0032 043B     	 subs r3,r3,#4
 167 0034 3A68     	 ldr r2,[r7]
 168 0036 D2B2     	 uxtb r2,r2
 169 0038 9200     	 lsls r2,r2,#2
 170 003a D2B2     	 uxtb r2,r2
 171 003c 0B44     	 add r3,r3,r1
 172 003e 1A76     	 strb r2,[r3,#24]
 173              	.L9:
1818:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1819:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
 174              	 .loc 1 1819 0
 175 0040 0C37     	 adds r7,r7,#12
 176              	.LCFI13:
 177              	 .cfi_def_cfa_offset 4
 178 0042 BD46     	 mov sp,r7
 179              	.LCFI14:
 180              	 .cfi_def_cfa_register 13
 181              	 
 182 0044 5DF8047B 	 ldr r7,[sp],#4
 183              	.LCFI15:
 184              	 .cfi_restore 7
 185              	 .cfi_def_cfa_offset 0
 186 0048 7047     	 bx lr
 187              	.L13:
 188 004a 00BF     	 .align 2
 189              	.L12:
 190 004c 00E100E0 	 .word -536813312
 191 0050 00ED00E0 	 .word -536810240
 192              	 .cfi_endproc
 193              	.LFE113:
 195              	 .section .text.NVIC_EncodePriority,"ax",%progbits
 196              	 .align 2
 197              	 .thumb
 198              	 .thumb_func
 200              	NVIC_EncodePriority:
 201              	.LFB115:
1820:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1821:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1822:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1823:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Priority
1824:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1827:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return             Interrupt Priority.
1829:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1831:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
1833:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1834:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1836:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1838:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   else
1839:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   {
1840:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   }
1842:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
1843:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1844:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1845:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** /**
1846:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Encode Priority
1847:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            preemptive priority value, and subpriority value.
1849:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1850:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****  */
1856:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** {
 202              	 .loc 1 1857 0
 203              	 .cfi_startproc
 204              	 
 205              	 
 206              	 
 207 0000 80B4     	 push {r7}
 208              	.LCFI16:
 209              	 .cfi_def_cfa_offset 4
 210              	 .cfi_offset 7,-4
 211 0002 89B0     	 sub sp,sp,#36
 212              	.LCFI17:
 213              	 .cfi_def_cfa_offset 40
 214 0004 00AF     	 add r7,sp,#0
 215              	.LCFI18:
 216              	 .cfi_def_cfa_register 7
 217 0006 F860     	 str r0,[r7,#12]
 218 0008 B960     	 str r1,[r7,#8]
 219 000a 7A60     	 str r2,[r7,#4]
1858:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 220              	 .loc 1 1858 0
 221 000c FB68     	 ldr r3,[r7,#12]
 222 000e 03F00703 	 and r3,r3,#7
 223 0012 FB61     	 str r3,[r7,#28]
1859:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1861:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1862:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 224              	 .loc 1 1862 0
 225 0014 FB69     	 ldr r3,[r7,#28]
 226 0016 C3F10703 	 rsb r3,r3,#7
 227 001a 062B     	 cmp r3,#6
 228 001c 28BF     	 it cs
 229 001e 0623     	 movcs r3,#6
 230 0020 BB61     	 str r3,[r7,#24]
1863:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 231              	 .loc 1 1863 0
 232 0022 FB69     	 ldr r3,[r7,#28]
 233 0024 0633     	 adds r3,r3,#6
 234 0026 062B     	 cmp r3,#6
 235 0028 02D9     	 bls .L15
 236              	 .loc 1 1863 0 is_stmt 0 discriminator 1
 237 002a FB69     	 ldr r3,[r7,#28]
 238 002c 013B     	 subs r3,r3,#1
 239 002e 00E0     	 b .L16
 240              	.L15:
 241              	 .loc 1 1863 0 discriminator 2
 242 0030 0023     	 movs r3,#0
 243              	.L16:
 244              	 .loc 1 1863 0 discriminator 4
 245 0032 7B61     	 str r3,[r7,#20]
1864:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** 
1865:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****   return (
1866:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 246              	 .loc 1 1866 0 is_stmt 1 discriminator 4
 247 0034 BB69     	 ldr r3,[r7,#24]
 248 0036 0122     	 movs r2,#1
 249 0038 02FA03F3 	 lsl r3,r2,r3
 250 003c 5A1E     	 subs r2,r3,#1
 251 003e BB68     	 ldr r3,[r7,#8]
 252 0040 1A40     	 ands r2,r2,r3
 253 0042 7B69     	 ldr r3,[r7,#20]
 254 0044 9A40     	 lsls r2,r2,r3
1867:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 255              	 .loc 1 1867 0 discriminator 4
 256 0046 7B69     	 ldr r3,[r7,#20]
 257 0048 0121     	 movs r1,#1
 258 004a 01FA03F3 	 lsl r3,r1,r3
 259 004e 591E     	 subs r1,r3,#1
 260 0050 7B68     	 ldr r3,[r7,#4]
 261 0052 0B40     	 ands r3,r3,r1
1865:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 262              	 .loc 1 1865 0 discriminator 4
 263 0054 1343     	 orrs r3,r3,r2
1868:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h ****          );
1869:C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include\core_cm4.h **** }
 264              	 .loc 1 1869 0 discriminator 4
 265 0056 1846     	 mov r0,r3
 266 0058 2437     	 adds r7,r7,#36
 267              	.LCFI19:
 268              	 .cfi_def_cfa_offset 4
 269 005a BD46     	 mov sp,r7
 270              	.LCFI20:
 271              	 .cfi_def_cfa_register 13
 272              	 
 273 005c 5DF8047B 	 ldr r7,[sp],#4
 274              	.LCFI21:
 275              	 .cfi_restore 7
 276              	 .cfi_def_cfa_offset 0
 277 0060 7047     	 bx lr
 278              	 .cfi_endproc
 279              	.LFE115:
 281 0062 00BF     	 .section .text.XMC_USIC_CH_SetInputSource,"ax",%progbits
 282              	 .align 2
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_USIC_CH_SetInputSource:
 287              	.LFB149:
 288              	 .file 2 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 289              	 .loc 2 786 0
 290              	 .cfi_startproc
 291              	 
 292              	 
 293              	 
 294 0000 80B4     	 push {r7}
 295              	.LCFI22:
 296              	 .cfi_def_cfa_offset 4
 297              	 .cfi_offset 7,-4
 298 0002 83B0     	 sub sp,sp,#12
 299              	.LCFI23:
 300              	 .cfi_def_cfa_offset 16
 301 0004 00AF     	 add r7,sp,#0
 302              	.LCFI24:
 303              	 .cfi_def_cfa_register 7
 304 0006 7860     	 str r0,[r7,#4]
 305 0008 0B46     	 mov r3,r1
 306 000a FB70     	 strb r3,[r7,#3]
 307 000c 1346     	 mov r3,r2
 308 000e BB70     	 strb r3,[r7,#2]
 787:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 309              	 .loc 2 787 0
 310 0010 F878     	 ldrb r0,[r7,#3]
 311 0012 FB78     	 ldrb r3,[r7,#3]
 312 0014 7A68     	 ldr r2,[r7,#4]
 313 0016 0633     	 adds r3,r3,#6
 314 0018 9B00     	 lsls r3,r3,#2
 315 001a 1344     	 add r3,r3,r2
 316 001c 5B68     	 ldr r3,[r3,#4]
 317 001e 23F00702 	 bic r2,r3,#7
 788:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 318              	 .loc 2 788 0
 319 0022 BB78     	 ldrb r3,[r7,#2]
 787:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 320              	 .loc 2 787 0
 321 0024 1A43     	 orrs r2,r2,r3
 322 0026 7968     	 ldr r1,[r7,#4]
 323 0028 831D     	 adds r3,r0,#6
 324 002a 9B00     	 lsls r3,r3,#2
 325 002c 0B44     	 add r3,r3,r1
 326 002e 5A60     	 str r2,[r3,#4]
 789:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 327              	 .loc 2 789 0
 328 0030 0C37     	 adds r7,r7,#12
 329              	.LCFI25:
 330              	 .cfi_def_cfa_offset 4
 331 0032 BD46     	 mov sp,r7
 332              	.LCFI26:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 0034 5DF8047B 	 ldr r7,[sp],#4
 336              	.LCFI27:
 337              	 .cfi_restore 7
 338              	 .cfi_def_cfa_offset 0
 339 0038 7047     	 bx lr
 340              	 .cfi_endproc
 341              	.LFE149:
 343 003a 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_EnableEvent,"ax",%progbits
 344              	 .align 2
 345              	 .thumb
 346              	 .thumb_func
 348              	XMC_USIC_CH_TXFIFO_EnableEvent:
 349              	.LFB183:
 790:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1015:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1016:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1017:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1018:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1033:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1034:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1035:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1036:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1037:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1038:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1039:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1040:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1041:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1042:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1043:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1044:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1045:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1046:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1047:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1048:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1049:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1050:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1051:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1052:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1053:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1054:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1055:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1056:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1057:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1058:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1059:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1060:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1061:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1062:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1063:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1064:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1065:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1066:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1067:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1068:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1069:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1070:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1071:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1072:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1073:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
1074:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
1075:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1076:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1077:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1078:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1079:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1080:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1081:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1082:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1083:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1084:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1085:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1086:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1088:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1089:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1090:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1091:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1092:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1093:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1094:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1095:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1096:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1097:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1098:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1099:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1157:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1158:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1159:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1160:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1161:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1162:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1163:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1164:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1165:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1166:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1167:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1168:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1169:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1170:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1171:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1172:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1173:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1174:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1175:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1176:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1177:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1178:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1179:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1180:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1181:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1182:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1183:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1184:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1187:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1188:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1189:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1190:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1191:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1192:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1193:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1194:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1195:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1196:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1197:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1198:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1199:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1200:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1201:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1202:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1203:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1204:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1205:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1206:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1207:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1208:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1209:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1210:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1211:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1212:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1213:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1214:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
1215:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1216:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1217:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1218:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1219:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1220:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1221:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1222:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1223:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1224:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1225:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1226:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1227:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1228:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1229:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1230:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1231:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1232:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1233:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1234:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1235:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1238:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1240:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1241:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1242:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1243:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1244:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1245:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1246:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1247:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1248:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1251:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1252:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1253:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1254:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1255:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1256:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1257:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1258:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1259:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1260:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1261:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
1262:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1263:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1264:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1265:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1266:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1267:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1268:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1269:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1270:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1271:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1272:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1273:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1274:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1275:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1276:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1277:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1278:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1279:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1280:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1281:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1282:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1283:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1284:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1285:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1286:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1287:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1288:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1289:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1290:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1291:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1292:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1293:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1294:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1295:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1296:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1297:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1298:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1299:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1300:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1301:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1302:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1303:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1305:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1306:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1307:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1308:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1309:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1310:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1311:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1312:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1313:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1314:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1315:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1316:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1317:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1318:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1319:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1320:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1321:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1322:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1323:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1324:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1325:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1326:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1327:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1328:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1329:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1330:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1331:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1332:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1333:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1334:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1335:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1336:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1337:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1338:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1339:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1340:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1341:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1342:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1343:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1344:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1345:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1346:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1347:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1348:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1349:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1350:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1351:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1352:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1353:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1354:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1355:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1356:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1357:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1358:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1359:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1360:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1361:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1362:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1363:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1364:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1365:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1366:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1367:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1368:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1369:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1370:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1371:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1372:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1373:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1374:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1375:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1376:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1377:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1378:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1379:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1380:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1381:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1382:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1383:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1384:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1385:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1386:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1387:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1388:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1389:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1390:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1391:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1392:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1393:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1394:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1395:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1396:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1397:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1398:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1399:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1400:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1401:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1403:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1404:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1405:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1406:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1407:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1408:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1409:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1410:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1411:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1412:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1413:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1414:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1415:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1416:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1417:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1418:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1419:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1420:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1421:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1422:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1423:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1424:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1425:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1426:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1427:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1428:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1429:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1430:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1431:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1432:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1433:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1434:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1435:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1436:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1437:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1438:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1439:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1440:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1441:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1442:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1443:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1444:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1445:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1446:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1447:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1448:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1449:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1450:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1451:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1452:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1453:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1454:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1455:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1456:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1457:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1458:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1459:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1460:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1461:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1462:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1463:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1464:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1465:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1466:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1467:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1468:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1469:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1470:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1471:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1472:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1473:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1474:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1475:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1476:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1477:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1478:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1479:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1480:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1481:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1482:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1483:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1484:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1485:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1486:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1487:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1488:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1489:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1490:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1491:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1492:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1493:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1494:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1495:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1496:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1497:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1498:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1499:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1500:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1501:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1502:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1503:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1504:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1505:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1506:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1507:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1508:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1509:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1510:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1511:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1512:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1513:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1514:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1515:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1516:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1517:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1518:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1519:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1520:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1521:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1522:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1523:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1524:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1525:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1526:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1527:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1528:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1529:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1530:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1531:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1532:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1533:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1534:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1535:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1537:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1538:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1539:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1540:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 350              	 .loc 2 1540 0
 351              	 .cfi_startproc
 352              	 
 353              	 
 354              	 
 355 0000 80B4     	 push {r7}
 356              	.LCFI28:
 357              	 .cfi_def_cfa_offset 4
 358              	 .cfi_offset 7,-4
 359 0002 83B0     	 sub sp,sp,#12
 360              	.LCFI29:
 361              	 .cfi_def_cfa_offset 16
 362 0004 00AF     	 add r7,sp,#0
 363              	.LCFI30:
 364              	 .cfi_def_cfa_register 7
 365 0006 7860     	 str r0,[r7,#4]
 366 0008 3960     	 str r1,[r7]
1541:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
 367              	 .loc 2 1541 0
 368 000a 7B68     	 ldr r3,[r7,#4]
 369 000c D3F80821 	 ldr r2,[r3,#264]
 370 0010 3B68     	 ldr r3,[r7]
 371 0012 1A43     	 orrs r2,r2,r3
 372 0014 7B68     	 ldr r3,[r7,#4]
 373 0016 C3F80821 	 str r2,[r3,#264]
1542:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 374              	 .loc 2 1542 0
 375 001a 0C37     	 adds r7,r7,#12
 376              	.LCFI31:
 377              	 .cfi_def_cfa_offset 4
 378 001c BD46     	 mov sp,r7
 379              	.LCFI32:
 380              	 .cfi_def_cfa_register 13
 381              	 
 382 001e 5DF8047B 	 ldr r7,[sp],#4
 383              	.LCFI33:
 384              	 .cfi_restore 7
 385              	 .cfi_def_cfa_offset 0
 386 0022 7047     	 bx lr
 387              	 .cfi_endproc
 388              	.LFE183:
 390              	 .section .text.XMC_USIC_CH_RXFIFO_EnableEvent,"ax",%progbits
 391              	 .align 2
 392              	 .thumb
 393              	 .thumb_func
 395              	XMC_USIC_CH_RXFIFO_EnableEvent:
 396              	.LFB194:
1543:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1544:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1545:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1546:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1547:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1548:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1549:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1550:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1551:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1552:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1553:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1554:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1555:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1556:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1557:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1560:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1562:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1564:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1567:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1568:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1569:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1570:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1571:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1572:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1573:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1574:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1575:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1576:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1577:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1578:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1579:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1580:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1581:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1582:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1583:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1584:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1585:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1586:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1587:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1588:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1589:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1590:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1591:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1592:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1593:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1594:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1595:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1596:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1597:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1598:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1599:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1603:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1604:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1605:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1606:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1607:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1608:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1609:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1610:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1611:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1612:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1613:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1614:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1615:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1616:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1617:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1618:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1619:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1620:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1621:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1622:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1623:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1624:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1625:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1626:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1627:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1628:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1629:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1630:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1631:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1632:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1633:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1634:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1635:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1636:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1637:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1638:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1639:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1640:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1641:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1642:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1643:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1644:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1648:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1649:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1650:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1651:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1652:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1653:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1654:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1655:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1656:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1657:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1658:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1659:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1660:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1661:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1666:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1667:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1668:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1669:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1670:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1671:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1672:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1673:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1674:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1675:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1676:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1677:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1678:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1679:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1680:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1681:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1682:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1683:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1684:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1685:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1686:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1687:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1688:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1689:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1690:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1691:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1692:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1693:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1694:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1695:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1696:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1697:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1698:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1699:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1700:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1701:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1702:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1703:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1704:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1705:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1706:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1707:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1708:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1709:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1710:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1712:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1713:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1714:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1715:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1716:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1717:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1718:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1719:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1720:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1721:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1722:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1723:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1724:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1725:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1726:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1727:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1728:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1729:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1730:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1731:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1732:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1733:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1734:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1735:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1736:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1737:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1738:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1739:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1740:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1741:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1742:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1744:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1745:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1746:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1747:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1748:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1749:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1750:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1753:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1755:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1756:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1757:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1758:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1759:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1760:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1761:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1762:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1763:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1764:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1765:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1766:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1767:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1768:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1769:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1770:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1771:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1772:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1773:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1774:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1775:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1776:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1777:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1778:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1779:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1780:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1781:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1782:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1783:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1784:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1785:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1786:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1787:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1788:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1789:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1790:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1791:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1792:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1793:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1794:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1795:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1796:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1797:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1798:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1799:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1800:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1801:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1802:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1803:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1804:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1805:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** */
1806:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1807:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1808:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1809:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1810:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1811:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1812:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1813:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1814:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1815:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1816:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1817:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1818:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1819:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1820:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1821:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1822:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1823:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1824:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1825:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1827:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1828:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1829:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1830:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1831:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1832:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1833:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1834:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1835:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1836:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1837:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1839:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1840:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1841:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1842:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1843:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1844:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1845:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1846:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1847:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1849:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1851:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 397              	 .loc 2 1851 0
 398              	 .cfi_startproc
 399              	 
 400              	 
 401              	 
 402 0000 80B4     	 push {r7}
 403              	.LCFI34:
 404              	 .cfi_def_cfa_offset 4
 405              	 .cfi_offset 7,-4
 406 0002 83B0     	 sub sp,sp,#12
 407              	.LCFI35:
 408              	 .cfi_def_cfa_offset 16
 409 0004 00AF     	 add r7,sp,#0
 410              	.LCFI36:
 411              	 .cfi_def_cfa_register 7
 412 0006 7860     	 str r0,[r7,#4]
 413 0008 3960     	 str r1,[r7]
1852:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
 414              	 .loc 2 1852 0
 415 000a 7B68     	 ldr r3,[r7,#4]
 416 000c D3F80C21 	 ldr r2,[r3,#268]
 417 0010 3B68     	 ldr r3,[r7]
 418 0012 1A43     	 orrs r2,r2,r3
 419 0014 7B68     	 ldr r3,[r7,#4]
 420 0016 C3F80C21 	 str r2,[r3,#268]
1853:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 421              	 .loc 2 1853 0
 422 001a 0C37     	 adds r7,r7,#12
 423              	.LCFI37:
 424              	 .cfi_def_cfa_offset 4
 425 001c BD46     	 mov sp,r7
 426              	.LCFI38:
 427              	 .cfi_def_cfa_register 13
 428              	 
 429 001e 5DF8047B 	 ldr r7,[sp],#4
 430              	.LCFI39:
 431              	 .cfi_restore 7
 432              	 .cfi_def_cfa_offset 0
 433 0022 7047     	 bx lr
 434              	 .cfi_endproc
 435              	.LFE194:
 437              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
 438              	 .align 2
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_USIC_CH_SetMode:
 443              	.LFB207:
1854:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1856:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1857:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1858:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1859:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1860:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1861:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1862:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1863:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1864:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1865:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1866:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1867:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1868:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1869:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1870:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1873:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1875:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1877:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1878:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1879:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1880:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1881:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1882:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1883:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1884:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1885:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1886:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1887:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1891:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1892:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1893:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1894:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1895:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1896:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1897:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1898:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1899:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1900:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1901:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1902:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1903:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1904:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1905:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1906:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1907:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1908:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1909:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1910:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1911:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1912:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1913:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1914:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1915:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1916:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1917:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1918:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1919:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1920:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1921:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1922:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1923:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1924:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1925:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1926:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1927:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1928:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1929:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1930:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1931:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1932:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1933:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1934:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1935:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1936:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1937:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1938:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1939:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1940:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1941:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1942:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1943:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1944:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1945:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1946:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1947:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1948:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1949:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1950:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1951:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1952:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1953:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1954:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1955:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1956:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1957:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1958:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1959:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1960:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1961:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1962:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1963:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1964:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1965:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1966:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1967:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1968:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1969:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1971:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1972:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1973:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1974:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1975:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1978:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1979:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1980:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1982:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
1983:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
1984:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
1985:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1986:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1987:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1988:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1989:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
1990:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1991:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1992:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1993:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1994:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1995:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1996:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1997:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1998:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
1999:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2000:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2001:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2002:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2003:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2004:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2005:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2006:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2007:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2008:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2009:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2010:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2011:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2012:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2013:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2014:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2015:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2016:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2017:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2018:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2019:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2020:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2021:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2022:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2023:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2024:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2025:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2026:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
2027:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
2028:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2029:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2030:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2031:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2032:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2033:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2034:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2035:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2036:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2037:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2038:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2039:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2040:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2041:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
2042:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2043:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
2044:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2045:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2046:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2047:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2048:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2049:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2050:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
2051:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2052:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2053:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2054:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2055:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2056:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2057:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2058:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2059:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2060:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2061:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2062:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2063:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2064:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2065:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2066:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2067:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2068:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2069:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2070:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2071:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2072:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2073:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2074:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2075:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2079:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2080:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2081:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2082:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2083:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2084:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2085:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2086:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2087:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2088:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2089:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2090:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2091:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2092:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2093:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2094:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2095:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2096:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2097:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2098:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2099:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
2101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
2128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
2129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
2130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
2132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
2135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** 
2136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** /**
2137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  *
2150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****  */
2153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** {
 444              	 .loc 2 2154 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 449 0000 80B4     	 push {r7}
 450              	.LCFI40:
 451              	 .cfi_def_cfa_offset 4
 452              	 .cfi_offset 7,-4
 453 0002 83B0     	 sub sp,sp,#12
 454              	.LCFI41:
 455              	 .cfi_def_cfa_offset 16
 456 0004 00AF     	 add r7,sp,#0
 457              	.LCFI42:
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 460 0008 0B46     	 mov r3,r1
 461 000a FB70     	 strb r3,[r7,#3]
2155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
 462              	 .loc 2 2155 0
 463 000c 7B68     	 ldr r3,[r7,#4]
 464 000e 1B6C     	 ldr r3,[r3,#64]
 465 0010 23F00F02 	 bic r2,r3,#15
 466 0014 FB78     	 ldrb r3,[r7,#3]
 467 0016 1A43     	 orrs r2,r2,r3
 468 0018 7B68     	 ldr r3,[r7,#4]
 469 001a 1A64     	 str r2,[r3,#64]
2156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_usic.h **** }
 470              	 .loc 2 2156 0
 471 001c 0C37     	 adds r7,r7,#12
 472              	.LCFI43:
 473              	 .cfi_def_cfa_offset 4
 474 001e BD46     	 mov sp,r7
 475              	.LCFI44:
 476              	 .cfi_def_cfa_register 13
 477              	 
 478 0020 5DF8047B 	 ldr r7,[sp],#4
 479              	.LCFI45:
 480              	 .cfi_restore 7
 481              	 .cfi_def_cfa_offset 0
 482 0024 7047     	 bx lr
 483              	 .cfi_endproc
 484              	.LFE207:
 486 0026 00BF     	 .section .text.XMC_I2C_CH_Start,"ax",%progbits
 487              	 .align 2
 488              	 .thumb
 489              	 .thumb_func
 491              	XMC_I2C_CH_Start:
 492              	.LFB208:
 493              	 .file 3 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2019-05-07
   4:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
   7:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.                        
  11:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                             
  12:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * following conditions are met:   
  14:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  15:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer.                        
  17:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  18:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  21:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  24:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  32:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
  35:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  37:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  38:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  39:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  40:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  41:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *      
  42:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  43:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  44:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  45:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  46:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  47:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  49:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  50:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  51:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  52:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  53:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  54:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  55:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  56:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  57:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  58:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  59:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  60:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  61:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  62:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  63:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  64:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  65:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  66:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  68:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  69:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  70:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  71:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  72:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  73:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  74:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  75:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  76:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  77:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  78:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  79:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  80:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond 
  82:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  83:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  84:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
  85:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  86:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  87:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
  88:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
  89:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
  90:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
  91:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
  92:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
  93:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
  94:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  95:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
  96:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
  97:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  98:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 100:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 101:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family. 
 102:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 103:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 104:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 105:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 106:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 107:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 108:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 109:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 110:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 111:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 112:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 113:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 114:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 115:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 116:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 117:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 118:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 119:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 120:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 121:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 122:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 123:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 124:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 125:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 126:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 127:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 128:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 129:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 130:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 131:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 132:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 133:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 134:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 135:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 136:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 137:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 138:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 139:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 140:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 142:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 143:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 144:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 145:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 146:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 147:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 148:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 149:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 150:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 151:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 152:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 153:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 154:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 155:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 156:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 157:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 158:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 159:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 160:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 161:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 162:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 163:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 164:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 165:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 166:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 167:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 168:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 169:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 170:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 171:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 172:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 173:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 174:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 175:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 176:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 177:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 178:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 179:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 180:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 181:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 182:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 183:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 184:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 185:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 186:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 187:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 188:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 189:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 190:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 191:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 192:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 193:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 194:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 195:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 196:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 197:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 198:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 199:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 200:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 201:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 202:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 203:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 204:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 205:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 206:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 207:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 208:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 209:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 210:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 211:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 212:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 213:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 214:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 215:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 216:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 217:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 218:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 219:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 220:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 221:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 222:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 223:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 224:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 225:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 226:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 227:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 228:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 229:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 230:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 231:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 232:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 233:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 234:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 235:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 236:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 237:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 238:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 239:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 240:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 241:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 242:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 243:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 244:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 245:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 246:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 247:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 248:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 249:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 250:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 251:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 252:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 253:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 254:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 255:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 256:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 257:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 258:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 259:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 260:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 261:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 262:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 263:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 264:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address 
 265:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 266:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 267:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 268:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 269:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 270:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 271:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 272:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 273:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 274:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 275:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 276:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 277:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 278:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 279:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 280:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 281:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 282:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 283:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 284:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 285:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 286:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 287:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 288:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 289:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 290:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 291:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 292:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 293:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 294:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config);
 295:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 296:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 297:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 298:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 299:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 300:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 301:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 303:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 304:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 305:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 306:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 307:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 308:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 309:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 310:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 311:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 312:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 313:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 314:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 315:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 316:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 317:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 318:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 319:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 321:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 322:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 323:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 324:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 325:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 326:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 327:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 328:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 329:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 330:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** 
 331:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 332:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 333:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 335:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 336:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 337:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 338:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 339:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 340:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 341:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 342:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 343:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 344:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 345:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 346:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** {
 494              	 .loc 3 346 0
 495              	 .cfi_startproc
 496              	 
 497              	 
 498 0000 80B5     	 push {r7,lr}
 499              	.LCFI46:
 500              	 .cfi_def_cfa_offset 8
 501              	 .cfi_offset 7,-8
 502              	 .cfi_offset 14,-4
 503 0002 82B0     	 sub sp,sp,#8
 504              	.LCFI47:
 505              	 .cfi_def_cfa_offset 16
 506 0004 00AF     	 add r7,sp,#0
 507              	.LCFI48:
 508              	 .cfi_def_cfa_register 7
 509 0006 7860     	 str r0,[r7,#4]
 347:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 510              	 .loc 3 347 0
 511 0008 7868     	 ldr r0,[r7,#4]
 512 000a 0421     	 movs r1,#4
 513 000c FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 348:C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc\xmc_i2c.h **** }
 514              	 .loc 3 348 0
 515 0010 0837     	 adds r7,r7,#8
 516              	.LCFI49:
 517              	 .cfi_def_cfa_offset 8
 518 0012 BD46     	 mov sp,r7
 519              	.LCFI50:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0014 80BD     	 pop {r7,pc}
 523              	 .cfi_endproc
 524              	.LFE208:
 526 0016 00BF     	 .section .rodata.I2C_MASTER_0_sda_pin_config,"a",%progbits
 527              	 .align 2
 530              	I2C_MASTER_0_sda_pin_config:
 531 0000 C8       	 .byte -56
 532 0001 000000   	 .space 3
 533 0004 01000000 	 .word 1
 534 0008 00       	 .byte 0
 535 0009 000000   	 .space 3
 536              	 .section .rodata.I2C_MASTER_0_scl_pin_config,"a",%progbits
 537              	 .align 2
 540              	I2C_MASTER_0_scl_pin_config:
 541 0000 C8       	 .byte -56
 542 0001 000000   	 .space 3
 543 0004 01000000 	 .word 1
 544 0008 00       	 .byte 0
 545 0009 000000   	 .space 3
 546              	 .global I2C_MASTER_0_channel_config
 547              	 .section .rodata.I2C_MASTER_0_channel_config,"a",%progbits
 548              	 .align 2
 551              	I2C_MASTER_0_channel_config:
 552 0000 E8030000 	 .word 1000
 553 0004 0000     	 .space 2
 554 0006 0000     	 .short 0
 555              	 .section .text.I2C_MASTER_0_disable_io,"ax",%progbits
 556              	 .align 2
 557              	 .thumb
 558              	 .thumb_func
 560              	I2C_MASTER_0_disable_io:
 561              	.LFB246:
 562              	 .file 4 "../Dave/Generated/I2C_MASTER/i2c_master_conf.c"
   1:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** * DAVE APP Name : I2C_MASTER       APP Version: 4.1.30
   3:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** *
   4:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** * NOTE:
   5:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
   8:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /**
   9:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * @cond
  10:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  **************************************************************************************************
  11:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  12:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  13:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * All rights reserved.
  14:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  15:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * following conditions are met:
  17:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  18:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   disclaimer.
  20:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  21:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  24:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  27:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  35:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  **************************************************************************************************
  38:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  39:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Change History
  40:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * --------------
  41:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  42:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * 2015-02-16:
  43:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *     - Initial version<br>
  44:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  45:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * 2015-04-06:
  46:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *     - Optimized generation of config code<br>
  47:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  48:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * 2015-07-29:
  49:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *     - Added DMA, direct mode support<br>
  50:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  51:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * 2018-02-20:
  52:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *     - Within dma_tx_handler() tx_callback only called if transmitting
  53:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *     - Added digital filter
  54:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  55:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * @endcond
  56:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  57:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  */
  58:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
  59:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /**************************************************************************************************
  60:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * HEADER FILES
  61:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  **************************************************************************************************
  62:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #include "i2c_master.h" 
  63:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #if (UC_FAMILY == XMC1)
  64:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #include "xmc_scu.h"
  65:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #endif
  66:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /**************************************************************************************************
  67:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** * DATA STRUCTURES
  68:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** ***************************************************************************************************
  69:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /*
  70:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Function implements the data transmission. It is called from the transmit interrupt service hand
  71:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Function pushes data to the output block and releases control. It is called again when the previ
  72:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * transmitted. When transmit FIFO is used, the function sets the trigger limit based on the size o
  73:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * transmitted. This makes sure that the CPU usage is optimum.
  74:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  75:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * I2C_MASTER_t * pointer to the I2C_MASTER APP instance handle
  76:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  77:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  */
  78:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_TransmitHandler(I2C_MASTER_t * const handle);
  79:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
  80:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /*
  81:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Function implements the data reception. It is called from the receive interrupt service handler.
  82:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * Function reads data from the receive block and updates the user's buffer. It is called again whe
  83:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * received again. When receive FIFO is used, the function sets the trigger limit based on the size
  84:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * received. This makes sure that the CPU usage is optimum.
  85:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  86:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  * I2C_MASTER_t * pointer to the I2C_MASTER APP instance handle
  87:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  *
  88:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  */
  89:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_ReceiveHandler(I2C_MASTER_t * const handle);
  90:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
  91:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_init(void);
  92:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
  93:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_dma_tx_handler(XMC_DMA_CH_EVENT_t event);
  94:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #endif
  95:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
  96:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_dma_rx_handler(XMC_DMA_CH_EVENT_t event);
  97:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #endif
  98:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   static const XMC_GPIO_CONFIG_t I2C_MASTER_0_sda_pin_config   =
  99:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   { 
 100:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT1,
 101:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .output_level   = XMC_GPIO_OUTPUT_LEVEL_HIGH,
 102:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE
 103:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   }; 
 104:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   static const XMC_GPIO_CONFIG_t I2C_MASTER_0_scl_pin_config   =
 105:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   { 
 106:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .mode = XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT1,
 107:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .output_level  = XMC_GPIO_OUTPUT_LEVEL_HIGH,
 108:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****     .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE
 109:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   }; 
 110:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** const XMC_I2C_CH_CONFIG_t I2C_MASTER_0_channel_config =
 111:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 112:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .baudrate = (uint32_t)(1000U),
 113:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .address  = 0
 114:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** };
 115:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 116:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** static void I2C_MASTER_0_disable_io(void)
 117:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 563              	 .loc 4 117 0
 564              	 .cfi_startproc
 565              	 
 566              	 
 567 0000 80B5     	 push {r7,lr}
 568              	.LCFI51:
 569              	 .cfi_def_cfa_offset 8
 570              	 .cfi_offset 7,-8
 571              	 .cfi_offset 14,-4
 572 0002 00AF     	 add r7,sp,#0
 573              	.LCFI52:
 574              	 .cfi_def_cfa_register 7
 118:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_SetMode((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)0, XMC_GPIO_MODE_INPUT_TRISTATE);
 575              	 .loc 4 118 0
 576 0004 0548     	 ldr r0,.L24
 577 0006 0021     	 movs r1,#0
 578 0008 0022     	 movs r2,#0
 579 000a FFF7FEFF 	 bl XMC_GPIO_SetMode
 119:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_SetMode((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)2, XMC_GPIO_MODE_INPUT_TRISTATE);
 580              	 .loc 4 119 0
 581 000e 0348     	 ldr r0,.L24
 582 0010 0221     	 movs r1,#2
 583 0012 0022     	 movs r2,#0
 584 0014 FFF7FEFF 	 bl XMC_GPIO_SetMode
 120:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** }
 585              	 .loc 4 120 0
 586 0018 80BD     	 pop {r7,pc}
 587              	.L25:
 588 001a 00BF     	 .align 2
 589              	.L24:
 590 001c 00850248 	 .word 1208124672
 591              	 .cfi_endproc
 592              	.LFE246:
 594              	 .section .text.I2C_MASTER_0_enable_io,"ax",%progbits
 595              	 .align 2
 596              	 .thumb
 597              	 .thumb_func
 599              	I2C_MASTER_0_enable_io:
 600              	.LFB247:
 121:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 122:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** static void I2C_MASTER_0_enable_io(void)
 123:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 601              	 .loc 4 123 0
 602              	 .cfi_startproc
 603              	 
 604              	 
 605 0000 80B5     	 push {r7,lr}
 606              	.LCFI53:
 607              	 .cfi_def_cfa_offset 8
 608              	 .cfi_offset 7,-8
 609              	 .cfi_offset 14,-4
 610 0002 00AF     	 add r7,sp,#0
 611              	.LCFI54:
 612              	 .cfi_def_cfa_register 7
 124:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_SetMode((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)0, I2C_MASTER_0_sda_pin_config.mode);
 613              	 .loc 4 124 0
 614 0004 C823     	 movs r3,#200
 615 0006 0648     	 ldr r0,.L27
 616 0008 0021     	 movs r1,#0
 617 000a 1A46     	 mov r2,r3
 618 000c FFF7FEFF 	 bl XMC_GPIO_SetMode
 125:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_SetMode((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)2, I2C_MASTER_0_scl_pin_config.mode);
 619              	 .loc 4 125 0
 620 0010 C823     	 movs r3,#200
 621 0012 0348     	 ldr r0,.L27
 622 0014 0221     	 movs r1,#2
 623 0016 1A46     	 mov r2,r3
 624 0018 FFF7FEFF 	 bl XMC_GPIO_SetMode
 126:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** }
 625              	 .loc 4 126 0
 626 001c 80BD     	 pop {r7,pc}
 627              	.L28:
 628 001e 00BF     	 .align 2
 629              	.L27:
 630 0020 00850248 	 .word 1208124672
 631              	 .cfi_endproc
 632              	.LFE247:
 634              	 .global I2C_MASTER_0_config
 635              	 .section .rodata.I2C_MASTER_0_config,"a",%progbits
 636              	 .align 2
 639              	I2C_MASTER_0_config:
 640 0000 00000000 	 .word I2C_MASTER_0_channel_config
 641 0004 00000000 	 .word I2C_MASTER_0_init
 642 0008 00000000 	 .word I2C_MASTER_0_enable_io
 643 000c 00000000 	 .word I2C_MASTER_0_disable_io
 644 0010 00000000 	 .word EndOfTransmit
 645 0014 00000000 	 .word EndOfReceive
 646 0018 00000000 	 .word 0
 647 001c 00000000 	 .word 0
 648 0020 00000000 	 .word 0
 649 0024 00       	 .byte 0
 650 0025 00       	 .byte 0
 651 0026 04       	 .byte 4
 652 0027 04       	 .byte 4
 653 0028 63       	 .byte 99
 654 0029 62       	 .byte 98
 655 002a 0000     	 .space 2
 656              	 .global I2C_MASTER_0_runtime
 657              	 .section .data.I2C_MASTER_0_runtime,"aw",%progbits
 658              	 .align 2
 661              	I2C_MASTER_0_runtime:
 662 0000 00000000 	 .space 36
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663 0024 03       	 .byte 3
 664 0025 02       	 .byte 2
 665 0026 00       	 .byte 0
 666 0027 00       	 .byte 0
 667 0028 00       	 .byte 0
 668 0029 000000   	 .space 3
 669              	 .global I2C_MASTER_0
 670              	 .section .data.I2C_MASTER_0,"aw",%progbits
 671              	 .align 2
 674              	I2C_MASTER_0:
 675 0000 00400248 	 .word 1208107008
 676 0004 00000000 	 .word I2C_MASTER_0_config
 677 0008 00000000 	 .word I2C_MASTER_0_runtime
 678              	 .section .text.I2C_MASTER_0_init,"ax",%progbits
 679              	 .align 2
 680              	 .global I2C_MASTER_0_init
 681              	 .thumb
 682              	 .thumb_func
 684              	I2C_MASTER_0_init:
 685              	.LFB248:
 127:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 128:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** const I2C_MASTER_CONFIG_t I2C_MASTER_0_config =
 129:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 130:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .brg_config = &I2C_MASTER_0_channel_config,
 131:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .fptr_i2c_config = I2C_MASTER_0_init,
 132:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .fptr_i2c_enable_io = I2C_MASTER_0_enable_io,
 133:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .fptr_i2c_disable_io = I2C_MASTER_0_disable_io,
 134:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .tx_cbhandler = EndOfTransmit,
 135:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rx_cbhandler = EndOfReceive,
 136:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .nack_cbhandler = NULL,
 137:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .arbitration_cbhandler = NULL,
 138:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .error_cbhandler = NULL,
 139:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .transmit_mode = I2C_MASTER_TRANSFER_MODE_INTERRUPT,
 140:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .receive_mode = I2C_MASTER_TRANSFER_MODE_INTERRUPT,
 141:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .txFIFO_size = XMC_USIC_CH_FIFO_SIZE_16WORDS,
 142:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  
 143:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rxFIFO_size = XMC_USIC_CH_FIFO_SIZE_16WORDS,
 144:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   
 145:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #if defined(I2C_MASTER_0_TX_IRQN)
 146:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .tx_irqn = I2C_MASTER_0_TX_IRQN,
 147:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #else
 148:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .tx_irqn = -1,
 149:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #endif
 150:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 151:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #if defined(I2C_MASTER_0_RX_IRQN)
 152:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rx_irqn = I2C_MASTER_0_RX_IRQN
 153:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #else
 154:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rx_irqn = -1
 155:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** #endif
 156:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 157:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** };
 158:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** I2C_MASTER_RUNTIME_t I2C_MASTER_0_runtime =
 159:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 160:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .tx_ack_sr = 0x3U,
 161:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .tx_busy = false,
 162:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rx_sr = 0x2U,
 163:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .rx_busy = false,
 164:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .bus_acquired = false
 165:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** };
 166:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 167:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** I2C_MASTER_t I2C_MASTER_0 =
 168:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 169:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .channel = XMC_I2C2_CH0,
 170:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .config = &I2C_MASTER_0_config,
 171:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   .runtime = &I2C_MASTER_0_runtime,
 172:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** };
 173:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 174:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_init(void)
 175:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 686              	 .loc 4 175 0
 687              	 .cfi_startproc
 688              	 
 689              	 
 690 0000 80B5     	 push {r7,lr}
 691              	.LCFI55:
 692              	 .cfi_def_cfa_offset 8
 693              	 .cfi_offset 7,-8
 694              	 .cfi_offset 14,-4
 695 0002 82B0     	 sub sp,sp,#8
 696              	.LCFI56:
 697              	 .cfi_def_cfa_offset 16
 698 0004 00AF     	 add r7,sp,#0
 699              	.LCFI57:
 700              	 .cfi_def_cfa_register 7
 176:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****  
 177:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   const uint32_t tx_fifo_events = (uint32_t)(0);
 701              	 .loc 4 177 0
 702 0006 0023     	 movs r3,#0
 703 0008 7B60     	 str r3,[r7,#4]
 178:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   const uint32_t rx_fifo_events = (uint32_t)(XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE | XMC_USIC_CH_
 704              	 .loc 4 178 0
 705 000a 4FF0C043 	 mov r3,#1610612736
 706 000e 3B60     	 str r3,[r7]
 179:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_I2C_CH_Init(XMC_I2C2_CH0, &I2C_MASTER_0_channel_config);
 707              	 .loc 4 179 0
 708 0010 3248     	 ldr r0,.L30
 709 0012 3349     	 ldr r1,.L30+4
 710 0014 FFF7FEFF 	 bl XMC_I2C_CH_Init
 180:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 181:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_SetInputSource(XMC_I2C2_CH0, XMC_USIC_CH_INPUT_DX0, 1);
 711              	 .loc 4 181 0
 712 0018 3048     	 ldr r0,.L30
 713 001a 0021     	 movs r1,#0
 714 001c 0122     	 movs r2,#1
 715 001e FFF7FEFF 	 bl XMC_USIC_CH_SetInputSource
 182:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_SetInputSource(XMC_I2C2_CH0, XMC_USIC_CH_INPUT_DX1, 0);
 716              	 .loc 4 182 0
 717 0022 2E48     	 ldr r0,.L30
 718 0024 0121     	 movs r1,#1
 719 0026 0022     	 movs r2,#0
 720 0028 FFF7FEFF 	 bl XMC_USIC_CH_SetInputSource
 183:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 184:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   /* configure i2c tx fifo */
 185:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_TXFIFO_Configure(XMC_I2C2_CH0,
 721              	 .loc 4 185 0
 722 002c 2B48     	 ldr r0,.L30
 723 002e 1021     	 movs r1,#16
 724 0030 0422     	 movs r2,#4
 725 0032 0123     	 movs r3,#1
 726 0034 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Configure
 186:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                16,
 187:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                XMC_USIC_CH_FIFO_SIZE_16WORDS,
 188:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                (uint32_t)1);
 189:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_I2C2_CH0,
 727              	 .loc 4 189 0
 728 0038 2848     	 ldr r0,.L30
 729 003a 1021     	 movs r1,#16
 730 003c 0322     	 movs r2,#3
 731 003e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 190:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                                XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
 191:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                              ((uint32_t)3));
 192:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_TXFIFO_EnableEvent(XMC_I2C2_CH0, tx_fifo_events);
 732              	 .loc 4 192 0
 733 0042 2648     	 ldr r0,.L30
 734 0044 7968     	 ldr r1,[r7,#4]
 735 0046 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_EnableEvent
 193:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   /* configure i2c rx fifo */
 194:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_RXFIFO_Configure(XMC_I2C2_CH0,
 736              	 .loc 4 194 0
 737 004a 2448     	 ldr r0,.L30
 738 004c 0021     	 movs r1,#0
 739 004e 0422     	 movs r2,#4
 740 0050 0F23     	 movs r3,#15
 741 0052 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Configure
 195:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                0,
 196:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                XMC_USIC_CH_FIFO_SIZE_16WORDS,
 197:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                 (uint32_t)(15));
 198:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_I2C2_CH0,
 742              	 .loc 4 198 0
 743 0056 2148     	 ldr r0,.L30
 744 0058 1021     	 movs r1,#16
 745 005a 0222     	 movs r2,#2
 746 005c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 199:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                                XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
 200:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                               ((uint32_t)0x2));
 201:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_I2C2_CH0,
 747              	 .loc 4 201 0
 748 0060 1E48     	 ldr r0,.L30
 749 0062 1321     	 movs r1,#19
 750 0064 0222     	 movs r2,#2
 751 0066 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 202:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                                XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE,
 203:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                               ((uint32_t)0x2));
 204:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_RXFIFO_EnableEvent(XMC_I2C2_CH0, rx_fifo_events);
 752              	 .loc 4 204 0
 753 006a 1C48     	 ldr r0,.L30
 754 006c 3968     	 ldr r1,[r7]
 755 006e FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_EnableEvent
 205:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_USIC_CH_SetInterruptNodePointer(XMC_I2C2_CH0,
 756              	 .loc 4 205 0
 757 0072 1A48     	 ldr r0,.L30
 758 0074 1021     	 movs r1,#16
 759 0076 0022     	 movs r2,#0
 760 0078 FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 206:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                       XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL,
 207:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****                                        ((uint32_t)0));
 208:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_I2C_CH_Start(XMC_I2C2_CH0);
 761              	 .loc 4 208 0
 762 007c 1748     	 ldr r0,.L30
 763 007e FFF7FEFF 	 bl XMC_I2C_CH_Start
 209:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** 
 210:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_Init((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)0, &I2C_MASTER_0_sda_pin_config);
 764              	 .loc 4 210 0
 765 0082 1848     	 ldr r0,.L30+8
 766 0084 0021     	 movs r1,#0
 767 0086 184A     	 ldr r2,.L30+12
 768 0088 FFF7FEFF 	 bl XMC_GPIO_Init
 211:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   XMC_GPIO_Init((XMC_GPIO_PORT_t *)PORT5_BASE, (uint8_t)2, &I2C_MASTER_0_scl_pin_config);
 769              	 .loc 4 211 0
 770 008c 1548     	 ldr r0,.L30+8
 771 008e 0221     	 movs r1,#2
 772 0090 164A     	 ldr r2,.L30+16
 773 0092 FFF7FEFF 	 bl XMC_GPIO_Init
 212:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /* Tx interrupt priority settings */
 213:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   NVIC_SetPriority((IRQn_Type)99, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),63,0));
 774              	 .loc 4 213 0
 775 0096 FFF7FEFF 	 bl __NVIC_GetPriorityGrouping
 776 009a 0346     	 mov r3,r0
 777 009c 1846     	 mov r0,r3
 778 009e 3F21     	 movs r1,#63
 779 00a0 0022     	 movs r2,#0
 780 00a2 FFF7FEFF 	 bl NVIC_EncodePriority
 781 00a6 0346     	 mov r3,r0
 782 00a8 6320     	 movs r0,#99
 783 00aa 1946     	 mov r1,r3
 784 00ac FFF7FEFF 	 bl __NVIC_SetPriority
 214:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   NVIC_EnableIRQ((IRQn_Type)99);/* Rx interrupt priority settings */
 785              	 .loc 4 214 0
 786 00b0 6320     	 movs r0,#99
 787 00b2 FFF7FEFF 	 bl __NVIC_EnableIRQ
 215:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   NVIC_SetPriority((IRQn_Type)98, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),63,0));
 788              	 .loc 4 215 0
 789 00b6 FFF7FEFF 	 bl __NVIC_GetPriorityGrouping
 790 00ba 0346     	 mov r3,r0
 791 00bc 1846     	 mov r0,r3
 792 00be 3F21     	 movs r1,#63
 793 00c0 0022     	 movs r2,#0
 794 00c2 FFF7FEFF 	 bl NVIC_EncodePriority
 795 00c6 0346     	 mov r3,r0
 796 00c8 6220     	 movs r0,#98
 797 00ca 1946     	 mov r1,r3
 798 00cc FFF7FEFF 	 bl __NVIC_SetPriority
 216:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   NVIC_EnableIRQ((IRQn_Type)98);}
 799              	 .loc 4 216 0
 800 00d0 6220     	 movs r0,#98
 801 00d2 FFF7FEFF 	 bl __NVIC_EnableIRQ
 802 00d6 0837     	 adds r7,r7,#8
 803              	.LCFI58:
 804              	 .cfi_def_cfa_offset 8
 805 00d8 BD46     	 mov sp,r7
 806              	.LCFI59:
 807              	 .cfi_def_cfa_register 13
 808              	 
 809 00da 80BD     	 pop {r7,pc}
 810              	.L31:
 811              	 .align 2
 812              	.L30:
 813 00dc 00400248 	 .word 1208107008
 814 00e0 00000000 	 .word I2C_MASTER_0_channel_config
 815 00e4 00850248 	 .word 1208124672
 816 00e8 00000000 	 .word I2C_MASTER_0_sda_pin_config
 817 00ec 00000000 	 .word I2C_MASTER_0_scl_pin_config
 818              	 .cfi_endproc
 819              	.LFE248:
 821              	 .section .text.USIC2_3_IRQHandler,"ax",%progbits
 822              	 .align 2
 823              	 .global USIC2_3_IRQHandler
 824              	 .thumb
 825              	 .thumb_func
 827              	USIC2_3_IRQHandler:
 828              	.LFB249:
 217:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /*Transmit ISR*/
 218:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_TX_HANDLER()
 219:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 829              	 .loc 4 219 0
 830              	 .cfi_startproc
 831              	 
 832              	 
 833 0000 80B5     	 push {r7,lr}
 834              	.LCFI60:
 835              	 .cfi_def_cfa_offset 8
 836              	 .cfi_offset 7,-8
 837              	 .cfi_offset 14,-4
 838 0002 00AF     	 add r7,sp,#0
 839              	.LCFI61:
 840              	 .cfi_def_cfa_register 7
 220:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   I2C_MASTER_TransmitHandler(&I2C_MASTER_0);
 841              	 .loc 4 220 0
 842 0004 0148     	 ldr r0,.L33
 843 0006 FFF7FEFF 	 bl I2C_MASTER_TransmitHandler
 221:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** }
 844              	 .loc 4 221 0
 845 000a 80BD     	 pop {r7,pc}
 846              	.L34:
 847              	 .align 2
 848              	.L33:
 849 000c 00000000 	 .word I2C_MASTER_0
 850              	 .cfi_endproc
 851              	.LFE249:
 853              	 .section .text.USIC2_2_IRQHandler,"ax",%progbits
 854              	 .align 2
 855              	 .global USIC2_2_IRQHandler
 856              	 .thumb
 857              	 .thumb_func
 859              	USIC2_2_IRQHandler:
 860              	.LFB250:
 222:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** /*Receive ISR*/
 223:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** void I2C_MASTER_0_RX_HANDLER()
 224:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** {
 861              	 .loc 4 224 0
 862              	 .cfi_startproc
 863              	 
 864              	 
 865 0000 80B5     	 push {r7,lr}
 866              	.LCFI62:
 867              	 .cfi_def_cfa_offset 8
 868              	 .cfi_offset 7,-8
 869              	 .cfi_offset 14,-4
 870 0002 00AF     	 add r7,sp,#0
 871              	.LCFI63:
 872              	 .cfi_def_cfa_register 7
 225:../Dave/Generated/I2C_MASTER/i2c_master_conf.c ****   I2C_MASTER_ReceiveHandler(&I2C_MASTER_0);
 873              	 .loc 4 225 0
 874 0004 0148     	 ldr r0,.L36
 875 0006 FFF7FEFF 	 bl I2C_MASTER_ReceiveHandler
 226:../Dave/Generated/I2C_MASTER/i2c_master_conf.c **** }
 876              	 .loc 4 226 0
 877 000a 80BD     	 pop {r7,pc}
 878              	.L37:
 879              	 .align 2
 880              	.L36:
 881 000c 00000000 	 .word I2C_MASTER_0
 882              	 .cfi_endproc
 883              	.LFE250:
 885              	 .text
 886              	.Letext0:
 887              	 .file 5 "c:\\davev4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 888              	 .file 6 "c:\\davev4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 889              	 .file 7 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 890              	 .file 8 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc/xmc_gpio.h"
 891              	 .file 9 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/XMCLib/inc/xmc4_gpio.h"
 892              	 .file 10 "../Dave/Generated/I2C_MASTER/i2c_master.h"
 893              	 .file 11 "C:/DAVEv4/Workspace/I2C_temperature/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 i2c_master_conf.c
    {standard input}:20     .text.__NVIC_GetPriorityGrouping:00000000 $t
    {standard input}:24     .text.__NVIC_GetPriorityGrouping:00000000 __NVIC_GetPriorityGrouping
    {standard input}:58     .text.__NVIC_GetPriorityGrouping:00000018 $d
    {standard input}:63     .text.__NVIC_EnableIRQ:00000000 $t
    {standard input}:67     .text.__NVIC_EnableIRQ:00000000 __NVIC_EnableIRQ
    {standard input}:118    .text.__NVIC_EnableIRQ:00000034 $d
    {standard input}:123    .text.__NVIC_SetPriority:00000000 $t
    {standard input}:127    .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
    {standard input}:190    .text.__NVIC_SetPriority:0000004c $d
    {standard input}:196    .text.NVIC_EncodePriority:00000000 $t
    {standard input}:200    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
    {standard input}:282    .text.XMC_USIC_CH_SetInputSource:00000000 $t
    {standard input}:286    .text.XMC_USIC_CH_SetInputSource:00000000 XMC_USIC_CH_SetInputSource
    {standard input}:344    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 $t
    {standard input}:348    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 XMC_USIC_CH_TXFIFO_EnableEvent
    {standard input}:391    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 $t
    {standard input}:395    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 XMC_USIC_CH_RXFIFO_EnableEvent
    {standard input}:438    .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:442    .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:487    .text.XMC_I2C_CH_Start:00000000 $t
    {standard input}:491    .text.XMC_I2C_CH_Start:00000000 XMC_I2C_CH_Start
    {standard input}:527    .rodata.I2C_MASTER_0_sda_pin_config:00000000 $d
    {standard input}:530    .rodata.I2C_MASTER_0_sda_pin_config:00000000 I2C_MASTER_0_sda_pin_config
    {standard input}:537    .rodata.I2C_MASTER_0_scl_pin_config:00000000 $d
    {standard input}:540    .rodata.I2C_MASTER_0_scl_pin_config:00000000 I2C_MASTER_0_scl_pin_config
    {standard input}:551    .rodata.I2C_MASTER_0_channel_config:00000000 I2C_MASTER_0_channel_config
    {standard input}:548    .rodata.I2C_MASTER_0_channel_config:00000000 $d
    {standard input}:556    .text.I2C_MASTER_0_disable_io:00000000 $t
    {standard input}:560    .text.I2C_MASTER_0_disable_io:00000000 I2C_MASTER_0_disable_io
    {standard input}:590    .text.I2C_MASTER_0_disable_io:0000001c $d
    {standard input}:595    .text.I2C_MASTER_0_enable_io:00000000 $t
    {standard input}:599    .text.I2C_MASTER_0_enable_io:00000000 I2C_MASTER_0_enable_io
    {standard input}:630    .text.I2C_MASTER_0_enable_io:00000020 $d
    {standard input}:639    .rodata.I2C_MASTER_0_config:00000000 I2C_MASTER_0_config
    {standard input}:636    .rodata.I2C_MASTER_0_config:00000000 $d
    {standard input}:684    .text.I2C_MASTER_0_init:00000000 I2C_MASTER_0_init
    {standard input}:661    .data.I2C_MASTER_0_runtime:00000000 I2C_MASTER_0_runtime
    {standard input}:658    .data.I2C_MASTER_0_runtime:00000000 $d
    {standard input}:674    .data.I2C_MASTER_0:00000000 I2C_MASTER_0
    {standard input}:671    .data.I2C_MASTER_0:00000000 $d
    {standard input}:679    .text.I2C_MASTER_0_init:00000000 $t
    {standard input}:813    .text.I2C_MASTER_0_init:000000dc $d
    {standard input}:822    .text.USIC2_3_IRQHandler:00000000 $t
    {standard input}:827    .text.USIC2_3_IRQHandler:00000000 USIC2_3_IRQHandler
    {standard input}:849    .text.USIC2_3_IRQHandler:0000000c $d
    {standard input}:854    .text.USIC2_2_IRQHandler:00000000 $t
    {standard input}:859    .text.USIC2_2_IRQHandler:00000000 USIC2_2_IRQHandler
    {standard input}:881    .text.USIC2_2_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_GPIO_SetMode
EndOfTransmit
EndOfReceive
XMC_I2C_CH_Init
XMC_USIC_CH_TXFIFO_Configure
XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
XMC_USIC_CH_RXFIFO_Configure
XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
XMC_USIC_CH_SetInterruptNodePointer
XMC_GPIO_Init
I2C_MASTER_TransmitHandler
I2C_MASTER_ReceiveHandler
